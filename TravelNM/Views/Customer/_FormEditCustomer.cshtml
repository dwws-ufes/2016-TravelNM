@model TravelNM.Models.CustomerView

@Html.AntiForgeryToken()
@Html.ValidationSummary(true)

<div class="form-group">
    @Html.LabelFor(model => model.Customer.Name, Resources.Customer.Name)
    @Html.TextBoxFor(model => model.Customer.Name, new { @class = "form-control", @required = true })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Customer.Address, Resources.Customer.Address)
    @Html.TextBoxFor(model => model.Customer.Address, new { @class = "form-control", @required = true })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Customer.Number, Resources.Customer.Number)
    @Html.TextBoxFor(model => model.Customer.Number, new { @class = "form-control", @required = true })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Customer.Complement, Resources.Customer.Complement)
    @Html.TextBoxFor(model => model.Customer.Complement, new { @class = "form-control", @required = true })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Customer.Neighborhood, Resources.Customer.Neighborhood)
    @Html.TextBoxFor(model => model.Customer.Neighborhood, new { @class = "form-control", @required = true })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Customer.City.Id, Resources.Customer.City)
    @Html.DropDownListFor(model => model.Customer.City.Id, new SelectList((from c in Model.Cities.ToList() select new {
                                Value = c.Id,
                                Text = c.Name + "/ " + c.State
                            }), "Value", "Text"),   
    new { @class = "form-control", @required = true })
</div>

<div class="editor-field">
    @Html.LabelFor(model => model.Customer.DateBirth, Resources.Customer.DateBirth)
    @Html.TextBoxFor(model => model.Customer.DateBirth, new
                {
                    @class = "form-control",
                    @required = true,
                    @data_val_required = Resources.Customer.DateRequired,
                    @data_val_date = Resources.Customer.DateInvalid
                })
    @Html.ValidationMessageFor(model => model.Customer.DateBirth)
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Customer.Email, Resources.Customer.Email)
    @Html.TextBoxFor(model => model.Customer.Email, new { @class = "form-control", @required = true,  @type = "email" })
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Customer.Password, Resources.Customer.Password)
    @Html.TextBoxFor(model => model.Customer.Password, new { @class = "form-control", @required = true, @Type = "password" })
</div>






    